@page "/listings"
@inject HttpClient Http
@inject NavigationManager navManager
@inject ILoginService loginService
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@if (_filter is not null)
{
    <SearchComponent _filter="@_filter" SearchRequested="OnSearchRequested"></SearchComponent>
}
@if (_items.Count() > 0 && _items is not null)
{
    <DisplayAllItemsComponent items="@_items" />
}



@code {

    private User? _user;
    private List<Item> _items = new();
    private Filter _filter = new();

    protected override async Task OnInitializedAsync()
    {
        _user = await loginService.GetUserLoggedIn();
        if (_user is null)
            navManager.NavigateTo("login/listings");

        await FetchItems();
    }

    private async Task FetchItems()
    {
        var response = await Http.GetFromJsonAsync<List<Item>>($"https://localhost:7077/api/items/get/all?filter={_filter}");
        if (response is not null) _items = new List<Item>(response);
    }

    private async Task OnSearchRequested(Filter filter)
    {
        _filter = filter;
        await FetchItems();
        StateHasChanged();
    }

}
