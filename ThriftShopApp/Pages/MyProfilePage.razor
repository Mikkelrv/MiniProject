@page "/myprofile"
@inject NavigationManager navManager
@inject ILoginService loginService

@if (user == null)
{
    <p>Loading profile...</p>
}
else
{
    <h4>@user.Name's Profile</h4>
    <p>Email: @user.Email</p>

    <div>
        <h5>Purchases</h5>
        <button class="btn btn-primary mb-3" @onclick="() => togglePurchasesView()">Toggle View</button>

        @if (showPurchasesSimple)
        {
           <DisplayAllItemsComponent items="@user.Purchases" isToggleShownButton="true"/>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle">
                    <thead class="table-dark">
                        <tr>
                            <th scope="col">Name</th>
                            <th scope="col">Description</th>
                            <th scope="col">Price</th>
                            <th scope="col">Category</th>
                            <th scope="col">Sold</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in user.Purchases)
                        {
                            <tr>
                                <td>@item.Name</td>
                                <td>@item.Description</td>
                                <td>DKK @item.Price</td>
                                <td>@item.Category</td>
                                @if (item.SoldTime != null){
                                    <td>@item.SoldTime</td>
                                }
                                else {
                                    <td>Not sold yet</td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }

        <h5>Sales</h5>
        <button class="btn btn-primary mb-3" @onclick="() => toggleSalesView()">Toggle View</button>

        @if (showSalesSimple)
        {
           <DisplayAllItemsComponent items="@user.Selling"/>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle">
                    <thead class="table-dark">
                        <tr>
                            <th scope="col">Name</th>
                            <th scope="col">Description</th>
                            <th scope="col">Price</th>
                            <th scope="col">Category</th>
                            <th scope="col">Sold</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in user.Selling)
                        {
                            <tr>
                                <td>@item.Name</td>
                                <td>@item.Description</td>
                                <td>DKK @item.Price</td>
                                <td>@item.Category</td>
                                @if (item.SoldTime != null){
                                    <td>@item.SoldTime</td>
                                }
                                else {
                                    <td>Not sold yet</td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
    
    <CreateItemButtonComponent/>    
    <style>
        /* Card Styling for Fixed Size */
        .fixed-card-img {
            width: 250px;           /* Set a fixed width */
            height: 300px;          /* Set a fixed height */
        }
        
        .fixed-card-body {
            width: 250px;           /* Set a fixed width */
            height: 150px;          /* Set a fixed height */
        }

        .fixed-card .card-body {
            overflow: hidden;       /* Prevents text overflow */
            text-align: center;     /* Center align the content */
        }

        .card-img-top {
            height: 150px;          /* Fixed height for the image */
            object-fit: cover;      /* Ensures image fills the designated space */
        }
    </style>
}

@code {
    private User? user;
    private bool showPurchasesSimple = true;
    private bool showSalesSimple = true;

    protected override async Task OnInitializedAsync()
    {
        user = await loginService.GetUserLoggedIn();
        if (user == null)
            navManager.NavigateTo("login/myprofile");
    }

    private void togglePurchasesView() => showPurchasesSimple = !showPurchasesSimple;

    private void toggleSalesView() => showSalesSimple = !showSalesSimple;
}
